package de.javan.jacksonrce.app;

import com.fasterxml.jackson.databind.ObjectMapper;
import javassist.runtime.Inner;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletRequest;
import javax.ws.rs.POST;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;


//@ApiIgnore
@RestController // Dont use RestController as this method is mapping to a static file not a JSON
public class MainController {

  	@RequestMapping(value={"/"})
	public ModelAndView index() {
		return new ModelAndView("index");
	}

	@RequestMapping(value={"/parse"},produces = "application/json;charset=UTF-8")
	@POST
	public Response parse(HttpServletRequest request) throws Exception {
		System.setProperty("com.sun.jndi.ldap.object.trustURLCodebase","true");

		Class.forName("org.h2.Driver").newInstance();
		ObjectMapper mapper = new ObjectMapper();
		mapper.enableDefaultTyping();

		try {
			BufferedReader streamReader = new BufferedReader(new InputStreamReader(request.getInputStream(), "UTF-8"));
			StringBuilder sb = new StringBuilder();
			String line = null;
			while ((line = streamReader.readLine()) != null) {
				sb.append(line);
			}
			// Convert JSON string to Object
			Object i = mapper.readValue(sb.toString(), Object.class);
			mapper.writeValueAsString(i);
			return Response.ok(i).build();

		} catch (IOException e) {
			return Response.status(Response.Status.INTERNAL_SERVER_ERROR.getStatusCode(), e.toString()).build();
		}

	}



}


